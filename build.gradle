buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'no.nils:wsdl2java:0.10'
    }
}

plugins {
    id 'maven-publish'
    id 'java-library'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'no.nils.wsdl2java'

group = 'com.insurance'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

wsdl2java {
    wsdlDir = file("src/main/resources/wsdl")
    generatedWsdlDir = file("generated-sources")
    wsdlsToGenerate = [
            ["src/main/resources/wsdl/CoverageVerification.wsdl"]
    ]
}

sourceSets {
    main.java.srcDirs += [wsdl2java.generatedWsdlDir]
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation('org.springframework.boot:spring-boot-starter-web-services')
    implementation("wsdl4j:wsdl4j:1.6.1")
    implementation('org.ehcache:ehcache:3.6.1')
    // https://mvnrepository.com/artifact/org.liquibase/liquibase-core
    //implementation group: 'org.liquibase', name: 'liquibase-core', version: '3.5.3'
    implementation group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: '2.1.0'

    runtime ('javax.activation:activation:1.1.1')
    runtime ('javax.mail:mail:1.4.7')
    runtime('org.codehaus.janino:janino:2.6.1')
    runtime('com.h2database:h2')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('com.h2database:h2')
    // https://mvnrepository.com/artifact/org.mockito/mockito-all
    testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    
}

publishing {
    publications {
         maven(MavenPublication) {
            groupId = 'com.github.insuranceverification'
            artifactId = 'ok-ivs'
            version = '0.1.0'
            from components.java
        }
    }

}

bootRun {
  systemProperties = System.properties
    if (project.hasProperty('args')) {
        args project.args.split(',')
    }
}